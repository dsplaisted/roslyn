<Project
  xmlns="http://schemas.microsoft.com/developer/msbuild/2003"
  DefaultTargets="Build"
  ToolsVersion="12.0">

  <Import Project="build\Targets\VSL.Settings.targets"/>

  <PropertyGroup>
    <SourceDir>src\</SourceDir>
    <NuGetToolPath>nuget.exe</NuGetToolPath>
  </PropertyGroup>

  <ItemGroup>
    <Project Include="src\Compilers\Core\MSBuildTask\MSBuildTask.csproj" />
  </ItemGroup>


  <Target Name="BuildAllProjects">
    <!-- To Serialize we use msbuild's batching functionality '%' to force it to batch all similar projects with the same identity 
         however since the project names are unique it will essentially force each to run in its own batch -->
    <MSBuild Targets="Build" Projects="@(Project)" Condition="'$(SerializeProjects)'=='true'" Properties="Dummy=%(Identity)"/>
    <MSBuild Targets="Build" Projects="@(Project)" Condition="'$(SerializeProjects)'!='true'" BuildInParallel="true" />
  </Target>

  <Target Name="CleanAllProjects">
    <!-- To Serialize we use msbuild's batching functionality '%' to force it to batch all similar projects with the same identity 
         however since the project names are unique it will essentially force each to run in its own batch -->
    <MSBuild Targets="Clean" Projects="@(Project)" Condition="'$(SerializeProjects)'=='true'" Properties="Dummy=%(Identity)"/>
    <MSBuild Targets="Clean" Projects="@(Project)" Condition="'$(SerializeProjects)'!='true'" BuildInParallel="true" />
  </Target>

  <PropertyGroup>
    <TraversalBuildDependsOn>
      BuildAllProjects;
      $(TraversalBuildDependsOn);
      BuildPackages;
    </TraversalBuildDependsOn>

    <TraversalCleanDependsOn>
      CleanAllProjects;
      $(TraversalCleanDependsOn);
    </TraversalCleanDependsOn>
  </PropertyGroup>

  <Target Name="Build" DependsOnTargets="$(TraversalBuildDependsOn)" />

  <Target Name="Clean" DependsOnTargets="$(TraversalCleanDependsOn)" />

  <Target Name="Rebuild" DependsOnTargets="Clean;Build" />

  <Import Project="build\Targets\packages.targets"/>
  
</Project>
